@charset "utf-8";
@import "reset.css";
@import "style/theme.css";

body {
  font-family:
    "Inter",
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif;
  background-color: var(--black);
  color: var(--white);
}

.hierarchy-list {
  width: max-content;
  margin-inline: 0;
}

.hierarchy-list ul {
  margin-block: 4rem;
  margin-left: 4rem;
  transform: translateX(3rem);
  display: flex;
  flex-flow: column wrap;
  place-items: start;
  place-content: center;
  place-self: start;
  padding: 0;
  list-style: none;
}

.hierarchy-list ul ul {
  transform: translateX(12rem);
}

.hierarchy-list ul ul ul {
  transform: translateX(6rem);
}

.hierarchy-list li {
  position: relative;
  padding: 0.25rem 0.5rem;
  margin-block: 0.25rem;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
  display: flex;
  place-items: start;
  place-content: start;
  --branch-color: var(--gray);
}
.hierarchy-list li:hover > .node-content {
  background-color: var(--gray);
}
.hierarchy-list .node-content {
  background-color: var(--black);
  border: 1px solid var(--gray);
  border-radius: 0.375rem;
  padding: 0.5rem 1rem;
  display: flex;
  place-items: center;
  place-content: start;
  gap: 0.5rem;
  transition: background-color 0.2s ease-in-out;
  position: relative;
  z-index: 4;
}
.hierarchy-list .node-content span {
  user-select: none;
}
.hierarchy-list .node-content::before {
  content: "";
  display: block;
  position: absolute;
  left: -0.375rem;
  top: 50%;
  clip-path: inset(0 50% 0 0);
  transform: translateY(-50%);
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 50%;
  background: var(--branch-color);
  transform: scale(0.8) translateY(-0.3125rem);
  z-index: 3;
}

.hierarchy-list .folder .node-content::before {
  background: var(--slate);
}

.hierarchy-list .node-content:hover::before {
  filter: brightness(1.2);
  left: -0.3125rem;
  transform: scale(1.2) translateY(-0.21875rem);
  transform-origin: center;
}

.hierarchy-list .node-content::after {
  content: "";
  display: block;
  position: absolute;
  left: -0.75rem;
  top: 50%;
  clip-path: inset(0 50% 0 0);
  transform: translateY(-50%);
  width: 1.5rem;
  height: 1.5rem;
  background-color: var(--black);
  border-radius: 50%;
  box-shadow: none;
  filter: opacity(0.2);
  z-index: 2;
}

.hierarchy-list .node-content:hover::after {
  background-color: var(--white);
  filter: opacity(0.08);
}
.hierarchy-list li[aria-expanded="false"] > ul {
  display: none;
}
#svg-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2;
}
.icon {
  width: 1.25rem;
  height: 1.25rem;
  flex-shrink: 0;
  color: var(--white);
}

.dir,
.folder {
  color: var(--slate);
}

.hierarchy-list .link .node-content::before {
  background: var(--violet);
}

.html,
.link {
  color: var(--violet);
}

.hierarchy-list .style .node-content::before {
  background: var(--cyan);
}

.css,
.style {
  color: var(--cyan);
}

.hierarchy-list .image .node-content::before {
  background: var(--green);
}

.avif,
.webp,
.png,
.image {
  color: var(--green);
}

.hierarchy-list .vector .node-content::before {
  background: var(--gold);
}

.svg,
.ico,
.vector {
  color: var(--gold);
}

.hierarchy-list .docs .node-content::before {
  background: var(--blue);
}

.md,
.docs {
  color: var(--blue);
}

.hierarchy-list .style .node-content::before {
  background: var(--cyan);
}

.yml,
.cff,
.file {
  color: var(--cyan);
}

.hierarchy-list .preset .node-content::before {
  background: var(--violet);
}

:is([class^="."], [class*="git"], [class$="config"], [class$="rc"]),
.preset {
  color: var(--violet);
}

.hierarchy-list .config .node-content::before {
  background: var(--red);
}

.json,
.config .yml,
.webmanifest,
.config {
  color: var(--red);
}

.hierarchy-list .script .node-content::before {
  background: var(--orange);
}

.sh,
.js,
.script {
  color: var(--orange);
}

.hierarchy-list li[data-color="Blue"] .icon,
.hierarchy-list li[data-color="Blue"] span {
  color: var(--blue) !important;
}
.hierarchy-list li[data-color="Blue"] .node-content::before {
  background: var(--blue) !important;
}

.hierarchy-list li[data-color="Cyan"] .icon,
.hierarchy-list li[data-color="Cyan"] span {
  color: var(--cyan) !important;
}
.hierarchy-list li[data-color="Cyan"] .node-content::before {
  background: var(--cyan) !important;
}

.hierarchy-list li[data-color="Green"] .icon,
.hierarchy-list li[data-color="Green"] span {
  color: var(--green) !important;
}
.hierarchy-list li[data-color="Green"] .node-content::before {
  background: var(--green) !important;
}

.hierarchy-list li[data-color="Orange"] .icon,
.hierarchy-list li[data-color="Orange"] span {
  color: var(--orange) !important;
}
.hierarchy-list li[data-color="Orange"] .node-content::before {
  background: var(--orange) !important;
}

.hierarchy-list li[data-color="Pink"] .icon,
.hierarchy-list li[data-color="Pink"] span {
  color: var(--pink) !important;
}
.hierarchy-list li[data-color="Pink"] .node-content::before {
  background: var(--pink) !important;
}

.hierarchy-list li[data-color="Purple"] .icon,
.hierarchy-list li[data-color="Purple"] span {
  color: var(--purple) !important;
}
.hierarchy-list li[data-color="Purple"] .node-content::before {
  background: var(--purple) !important;
}

.hierarchy-list li[data-color="Red"] .icon,
.hierarchy-list li[data-color="Red"] span {
  color: var(--red) !important;
}
.hierarchy-list li[data-color="Red"] .node-content::before {
  background: var(--red) !important;
}

.hierarchy-list li[data-color="Yellow"] .icon,
.hierarchy-list li[data-color="Yellow"] span {
  color: var(--yellow) !important;
}
.hierarchy-list li[data-color="Yellow"] .node-content::before {
  background: var(--yellow) !important;
}

.hierarchy-list li[data-color="Gold"] .icon,
.hierarchy-list li[data-color="Gold"] span {
  color: var(--gold) !important;
}
.hierarchy-list li[data-color="Gold"] .node-content::before {
  background: var(--gold) !important;
}

.hierarchy-list li[data-color="Maroon"] .icon,
.hierarchy-list li[data-color="Maroon"] span {
  color: var(--maroon) !important;
}
.hierarchy-list li[data-color="Maroon"] .node-content::before {
  background: var(--maroon) !important;
}

.hierarchy-list li[data-color="Olive"] .icon,
.hierarchy-list li[data-color="Olive"] span {
  color: var(--olive) !important;
}
.hierarchy-list li[data-color="Olive"] .node-content::before {
  background: var(--olive) !important;
}

.hierarchy-list li[data-color="Slate"] .icon,
.hierarchy-list li[data-color="Slate"] span {
  color: var(--slate) !important;
}
.hierarchy-list li[data-color="Slate"] .node-content::before {
  background: var(--slate) !important;
}

.hierarchy-list li[data-color="Violet"] .icon,
.hierarchy-list li[data-color="Violet"] span {
  color: var(--violet) !important;
}
.hierarchy-list li[data-color="Violet"] .node-content::before {
  background: var(--violet) !important;
}

.hierarchy-list li[data-color="Gray"] .icon,
.hierarchy-list li[data-color="Gray"] span {
  color: var(--gray) !important;
}
.hierarchy-list li[data-color="Gray"] .node-content::before {
  background: var(--gray) !important;
}

.node-content span {
  color: var(--white);
}
.folder[aria-expanded="true"] .icon-collapsed {
  display: none;
}
.folder[aria-expanded="true"] .icon-expanded {
  display: inline;
}
.folder[aria-expanded="false"] .icon-collapsed {
  display: inline;
}
.folder[aria-expanded="false"] .icon-expanded {
  display: none;
}
.folder:not([aria-expanded]) .icon-collapsed {
  display: inline;
}
.folder:not([aria-expanded]) .icon-expanded {
  display: none;
}

.hierarchy-list .node-content.hierarchy-highlight {
  background-color: var(--gray) !important;
  border-color: var(--gray) !important;
  transform: scale(1.02);
  box-shadow: 0 0 1px 2px var(--branch-color);
  outline: 1px dashed var(--branch-color);
  outline-offset: -3px;
  transition: all 0.2s ease-in-out;
}

.hierarchy-list .node-content.hierarchy-highlight::before {
  filter: brightness(1.4) !important;
  transform: scale(1.3) translateY(-0.21875rem) !important;
  transition: all 0.2s ease-in-out;
}

.hierarchy-list .node-content.hierarchy-highlight::after {
  background-color: var(--black) !important;
  filter: brightness(1.2) !important;
}

#dependency-modal {
  backdrop-filter: blur(4px);
}

#dependency-tree svg {
  background-color: var(--black);
}

.dependency-node {
  cursor: pointer;
}

.dependency-node:hover circle {
  stroke-width: 3px !important;
  filter: brightness(1.2);
}

.dependency-node:hover text {
  font-weight: 600;
}

.dependency-link {
  transition: all 0.2s ease-in-out;
}

.dependency-link:hover {
  stroke-width: 3px !important;
  stroke-opacity: 1 !important;
}

.file-node.js-file {
  color: var(--yellow);
}
.file-node.ts-file {
  color: var(--blue);
}
.file-node.css-file {
  color: var(--cyan);
}
.file-node.html-file {
  color: var(--red);
}
.file-node.json-file {
  color: var(--orange);
}
.file-node.md-file {
  color: var(--blue);
}

.folder:has(ul:empty) .node-content:hover {
  cursor: not-allowed;
}
.folder:has(ul:empty) .node-content > *,
.folder:has(ul:empty) .node-content ~ * {
  pointer-events: none;
  filter: grayscale(1) opacity(0.8);
}

#dependency-modal .dependency-content {
  background: linear-gradient(135deg, var(--black) 0%, var(--black) 100%);
  border: 1px solid var(--gray);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
}

.dependency-title {
  background: linear-gradient(90deg, var(--blue), var(--violet));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-weight: 600;
}

#dependency-tree {
  background-color: var(--black);
  border: 1px solid var(--gray);
  border-radius: 8px;
  overflow: hidden;
}

#dependency-tree .node {
  cursor: pointer;
  transition: all 0.3s ease;
}

#dependency-tree .node:hover {
  filter: brightness(1.2);
}

#dependency-tree .link {
  transition: all 0.3s ease;
}

#dependency-tree .link:hover {
  stroke-opacity: 1 !important;
  stroke-width: 4px !important;
}

#dependency-tree .link-label {
  pointer-events: none;
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);
}

#dependency-tree .legend {
  background-color: var(--black);
  border-radius: 6px;
  padding: 8px;
  border: 1px solid var(--gray);
}

#dependency-tree .legend-item {
  transition: opacity 0.2s ease;
}

#dependency-tree .legend-item:hover {
  opacity: 0.7;
}

#dependency-tree .node text.file-type {
  text-shadow: 0 0 2px rgba(0, 0, 0, 0.8);
  font-family: "Monaco", "Consolas", monospace;
}

#close-dependency-modal:hover {
  background-color: var(--red);
  color: var(--white);
  transform: scale(1.1);
  transition: all 0.2s ease;
}

.main-body {
  padding: 1rem;
}

@media (min-width: 640px) {
  .main-body {
    padding: 2rem;
  }
}

.container {
  max-width: 72rem;
  margin-left: auto;
  margin-right: auto;
}

.main-title {
  font-size: 1.5rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 1.5rem;
  color: var(--white);
}

@media (min-width: 640px) {
  .main-title {
    font-size: 1.875rem;
  }
}

.diagram-container {
  position: relative;
  padding: 1rem;
  background-color: var(--black);
  border-radius: 0.5rem;
  box-shadow:
    0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.modal-overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 50;
}

.modal-overlay.hidden {
  display: none;
}

.modal-content {
  position: absolute;
  top: 1rem;
  right: 1rem;
  bottom: 1rem;
  left: 1rem;
  background-color: var(--black);
  border-radius: 0.5rem;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.5);
  overflow: hidden;
}

.modal-wrapper {
  display: flex;
  height: 100%;
}

.modal-header {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  background-color: var(--black);
  padding: 1rem;
  z-index: 10;
}

.modal-header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--white);
}

.modal-close-btn {
  color: var(--gray);
  font-size: 1.5rem;
  background: none;
  border: none;
  cursor: pointer;
  transition: color 0.2s ease;
}

.modal-close-btn:hover {
  color: var(--white);
}

.modal-body {
  flex: 1;
  padding-top: 4rem;
  padding: 1rem;
}

.dependency-tree-container {
  width: 100%;
  height: 100%;
  background-color: var(--black);
}
